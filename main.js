TelegramBot = require('node-telegram-bot-api');
const token = '1097903013:AAHjon47mwC7BWolEwQTFZn2lA91iud0ge8'; 
var bot = new TelegramBot(token, {polling: true});
var drinked;
var chatid;
var le;
const offirs = 0;
const s = 0;
var gamersb = 0;
const p = 0;
var gamer = new Array();
var user = new Array();
var volume = new Array();
var q;
var i;
var lea = [];
var w;
var notgamer = [];
var notuser = [];
var chose = [];
var wFN;
var wId;
var inline1 = {
  reply_markup:{
    inline_keyboard: [
      [{text:'–ò–≥—Ä–∞—Ç—åüòã', callback_data:'togame'}, {text:'–í—ã–π—Ç–∏üòí', callback_data:'nogame'}],
      [{text:'–°–∫–æ–ª—å–∫–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤?', callback_data:'members'}]
    ]
  }
};
var inline2 = {
  reply_markup:{
    inline_keyboard: [
      [{ text: 'ü•É', callback_data: 'drink' }, { text: 'ü•õ', callback_data: 'nodrink' }],
[{ text: '–ö—Ç–æ –Ω–µ –Ω–∞–∂–∞–ª?ü§´', callback_data:'whonot' }]
    ]
  }
};

bot.onText(/–∏–≥—Ä–∞—Ç—å –≤ –±—ã–ª–æ/i, (msg) => {
chatid = msg.chat.id;
if (offirs === 0) {
bot.sendMessage(chatid,'–°—Ç–∞—Ä—Ç–æ–≤–∞–ª –Ω–∞–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –∏–≥—Ä—ã ¬´–ë—ã–ª–æ/–Ω–µ –±—ã–ª–æ¬ª', inline1); 
offirs = 1;
} else {
console.log(msg);
bot.answerCallbackQuery(msg.id,'–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞‚úãüèºü§öüèº. –û–∂–∏–¥–∞–π—Ç–µ...', true)
} 
})

bot.on('callback_query', function (msg) {
if (msg.data === 'togame') {
if (user.includes(msg.from.id)) {
bot.answerCallbackQuery(msg.id,'–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ', true)
} else {
gamer[gamersb] =  msg.from.first_name;
user[gamersb] = msg.from.id;
volume[gamersb] = 0;
gamersb++;
bot.answerCallbackQuery(msg.id,'–í—ã –≤–æ—à–ª–∏ –≤ –∏–≥—Ä—É', true);
} 
}

if (msg.data === 'nogame'){
if (user.includes(msg.from.id)) {
p = user.indexOf(msg.from.id);
shift.gamer[p];
shift.user[p];
shift.volume[p];
gamersb--;
} else {  
bot.answerCallbackQuery(msg.id,'–í—ã –∏—Ç–∞–∫ –Ω–µ –≤ –∏–≥—Ä–µüò≥',true)
}
} 


if (msg.data === 'members'){
bot.answerCallbackQuery(msg.id,gamersb+' —É—á–∞—Å—Ç–Ω–∏–∫(–æ–≤)',true)
}
})

bot.onText(/—Å—Ç–∞—Ä—Ç –±—ã–ª–æ/i, (msg) => {
if (offirs === 1 && gamersb > 1){
offirs = 2;
q = 0;
wId = user[q];
wFN = gamer[q];
if (gamersb < 2) {
offirs = 0;
}
gameWAS(gamersb, chatid, q, user[0], gamer[0], wld, wFN);
} else if (offirs === 0) {
bot.answerCallbackQuery(msg.id, '–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∏–≥—Ä—É –Ω–∞–ø–∏—Å–∞–≤ ¬´–∏–≥—Ä–∞—Ç—å –≤ –±—ã–ª–æ¬ª', true)
} else {
bot.answerCallbackQuery(msg.id, '–°–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è, –Ω–∞–±–µ—Ä–∏—Ç–µ –∫–∞–∫ –º–∏–Ω–∏–º—É–º 2‚úãüèºü§öüèº', true)
}
})

function gameWAS(gamerb, chatid, q, winner, winnerid, wId, wFN){
if (gamersb > 1) {
bot.sendMessage(chatid,'–°–µ–π—á–∞—Å <a href="tg://user?id='+wId+'">'+wFN+'</a> - –≤–µ–¥—É—â–∏–π!', {parse_mode: "HTML"});
bot.sendMessage(wId,'–¢—ã –≤–µ–¥—É—â–∏–π! –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ –≤–∏–¥–µ: –í—ã... (–ï—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å ¬´–≤—ã¬ª, —Ç–æ —è –ø—Ä–æ—Å—Ç–æ –Ω–µ –æ–ø—É–±–ª–∏–∫—É—é –≤–æ–ø—Ä–æ—Å)');
} else if (gamersb === 0) {
bot.sendMessage(chatid,'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∏–∫—Ç–æ –Ω–µ –≤—ã–π–≥—Ä–∞–ªü•∫');
} else {
bot.sendMessage(chatid,'–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –∏–≥—Ä—ã - <a href="tg://user?id='+winnerId+'">'+winner+'</a>, –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Ç–µ–±—è!', { parse_mode: "HTML"})
}
}

bot.onText(/–≤—ã/gi, (msg) => {
if (msg.from.id == wId) {
for(i = 0; i < gamer.lenght; i++) {
chose[i] = 1;
}
bot.sendMessage(chatId, msg.text+'  - –µ—Å–ª–∏ –î–ê, –±–µ—Ä–∏—Ç–µ ü•É, –µ—Å–ª–∏ –ù–ï–¢, –±–µ—Ä–∏—Ç–µ ü•õ', inline2);
wId = 0;
wFN = 0;
} else {
bot.answerCallbackQuery(msg.id,'–í–µ–¥—É—â–∏–π –Ω–µ –≤—ã‚úãüèºü§öüèº');
}
})

bot.on('callback_query', function (msg) {
 if (msg.data === 'drink') {
 if (user.includes(msg.from.id)) {
 p = user.indexOf(msg.from.id);
}
  if (chose[p] === 1) {
  drinked--;
  chose[p] = 0;
  volume[p] ++;
  bot.sendMessage(chatId,'<a href="tg://user?id='+user[p]+'">'+gamer[p]+'</a> –≤—ã–ø–∏–ª(–∞) —Ä—é–º–∫—É', {parse_mode:"HTML"})
  w = 0;
   if (drinked == gamer.lenght) {
    for (i=0; i < gamer.lenght; i++) {
     if (volume[i] == 5) {
     lea[w] = i;
     w++;
}
}
for (i = 0; i < lea.lenght; i++) {
le = lea[i] - i;
bot.sendMessage(chatId,'–ò–≥—Ä–æ–∫ <a href="tg://user?id='+user[le]+'">'+gamer[le]+'</a> –æ–ø—ä—è–Ω–µ–ª(–∞) (–≤—ã–±—ã–ª(–∞) –∏–∑ –∏–≥—Ä—ã)', {parse_mode: "HTML"})
shift.gamer[le];
shift.user[le];
shift.volume[le];
shift.chose[le];
le = '-1';
}
}
if (drinked === 0) {
if (q > user.lenght) {
      q=0;
      } else {
      q++;
     }
     wId = user[q];
     wFN = gamer[q];
if (gamersb < 2) {
offirs = 0;
}
     gamerWAS(gamer.lenght, chatId, q, user[0], gamer[0], wId, wFN)
}
}
}
if (msg.data === 'nodrink') {
if (user.includes(msg.from.id)) {
p = user.indexOf(msg.from.id);
}
    if (chose[p] === 1) {
    drinked--;
    chose[p] = 0;
    bot.sendMessage(chatId,'<a href="tg://user?id='+user[p]+'">'+gamer[p]+'</a> –≤—ã–ø–∏–ª(–∞) –º–æ–ª–æ–∫–æ', {parse_mode:"HTML"})
    w = 0;
     if (drinked  == gamer.lenght) {
      for (i=0; i < gamer.lenght; i++) {
       if (volume[i] == 5) {
       lea[w] = i;
       w++;
      }
     }
      for (i=0; i<lea.lenght; i++) {
le = lea[i] - i;
      bot.sendMessage(chatId,'–ò–≥—Ä–æ–∫ <a href="tg://user?id='+user[le]+'">'+gamer[le]+'</a> –æ–ø—ä—è–Ω–µ–ª(–∞) (–≤—ã–±—ã–ª(–∞) –∏–∑ –∏–≥—Ä—ã)', {parse_mode: "HTML"})
      shift.gamer[le];
      shift.user[le];
      shift.volume[le];
      shift.chose[le];
      le = '-1';
     }
}

if (drinked === 0) {
if (q > gamer.lenght) {
      q = 0;
      } else {
      q++;
     }
     wId = user[q];
     wFN = gamer[q];
if (gamersb < 2) {
offirs = 0;
}
     gamerWAS(gamer.lenght, chatId, q, user[0], gamer[0], wId, wFN)
}
    }
   };
  if (msg.data === 'whonot') {
   for (i = 0;i < gamer.lenght;i++) {
    if (chose[i] === 1) {
    notgamer[i] = gamer[i];
    notuser[i] = user[i];
    notgame += '<a href="tg://user?id='+notuser[i]+'">'+notgamer[i]+'</a> ';
   }
  }
  bot.sendMessage(chatId,notgame+'–Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', {parse_mode: "HTML"})
 }
})
