TelegramBot = require('node-telegram-bot-api');
const token = '1097903013:AAHjon47mwC7BWolEwQTFZn2lA91iud0ge8'; 
var bot = new TelegramBot(token, {polling: true});
const sqlite3 = require('sqlite3').verbose();
var chatt; 
var offirs = 0;
var gamersb = 0;
var p;
var ag;
var bb;
var f;
var admin = new Array();
var gamer = new Array();
var user = new Array();
var summ = new Array();
var chose = new Array();
var del;
var answ = new Array();
var a = new Array();
var b = new Array();
var c = new Array();
var d = new Array();
var n;
admin[0] = 684519513;
admin[1] = 858371219;
var number = new Array();
var cg = new Array();
var muted = new Array();
var muten = new Array();
var resul;
var tex;
var pid;
var psum;

answ[0] = '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞.';
a[0] = ' 1‚É£ ';
b[0] = ' 2Ô∏è‚É£ ';
c[0] = ' 3Ô∏è‚É£ ';
d[0] = ' 4Ô∏è‚É£ ';

const db = new sqlite3.Database('./mytest.db', (err) => {
  if (err) {
    console.error(err.message);
  }
});

bot.onText(/^–ø–æ–∫–∞–∑–∞—Ç—å –±–¥/i, (msg) => {
  db.serialize(() => {
    db.all('SELECT * FROM ba', (err, row) => {
      if (err) {
        throw err;
      }
      console.log(row);
    })
  })
})

bot.onText(/^–∫–æ–Ω—Ñ–µ—Ç—ã/i, (msg) => {
db.serialize(() => {
db.run('INSERT INTO ba(id, bal) SELECT '+msg.from.id+', 0 FROM ba WHERE NOT EXISTS(SELECT id FROM ba WHERE id='+msg.from.id+' LIMIT 1)')
  .get('SELECT bal FROM ba WHERE id = ' + msg.from.id, (err, row) => {
  if (err) {
    throw err;
  }
bot.sendMessage(msg.chat.id, '–¢–≤–æ–π –±–∞–ª–∞–Ω—Å ' + row.bal + ' üç¨', {reply_to_message_id:msg.message_id} )

});
});
});

bot.onText(/^\$(.+)/, (msg) => {
  tex = msg.text;
  tex = tex.replace(/^%/, '');
  db.serialize(() => {
db.run('INSERT INTO ba(id, bal) SELECT '+msg.from.id+', 0 FROM ba WHERE NOT EXISTS(SELECT id FROM ba WHERE id='+msg.from.id+' LIMIT 1)')
  .get('SELECT bal FROM ba WHERE id = ' + msg.from.id, (err, row) => {
  if (err) {
    throw err;
  }
  resul = row.bal;
});
});
  if (resul >= tex) {
    bot.sendMessage(msg.chat.id,' ');
  } else {
    bot.sendMessage(msg.chat.id,' ');
  }
})

bot.onText(/^–±–æ–Ω—É—Å (.+) (.+)/i, (msg, match) => {
  if (msg.from.id === admin[0]) {
  pid = match[1];
  psum = match[2];
  
    pid = null;
    psum = null;
}
  })


var inline1 = {
  reply_markup:{
    inline_keyboard: [
      [{text:'–ò–≥—Ä–∞—Ç—å üòè', callback_data:'togame'}, {text:'–í—ã–π—Ç–∏ üòí', callback_data:'nogame'}],
      [{text:'–°–∫–æ–ª—å–∫–æ —É—á.?', callback_data:'members'}, {text:'–ö—Ç–æ —É—á.?', callback_data:'whois'}]
    ]
  }
};






bot.onText(/^\/mute/, (msg) => {
if (admin.includes(msg.from.id)) {
bot.deleteMessage(msg.chat.id, msg.message_id);
muted[muted.length] = msg.reply_to_message.from.id;
muten[muten.length] = msg.reply_to_message.from.first_name;
bot.sendMessage(msg.chat.id,'<a href="tg://user?id='+msg.reply_to_message.from.id+'">'+msg.reply_to_message.from.first_name+'</a> –ø–æ–ª—É—á–∏–ª(–∞) –º—É—Ç',{parse_mode:"HTML"})
}
})

bot.onText(/^\/mt/, (msg) => {
if (admin.includes(msg.from.id)) {
bot.deleteMessage(msg.chat.id, msg.message_id);
f = '–ù–∞—Ä—É—à–∏—Ç–µ–ª–∏ –∑–∞–∫–æ–Ω–∞üòè\n';
for (i=0;i<muted.length;i++){
f+= (i + 1) + ' '+ muten[i] + '\n';
}
bot.sendMessage(msg.chat.id,f);
}
})

bot.onText(/^\/unm/, (msg) => {
if (admin.includes(msg.from.id)) {
bot.deleteMessage(msg.chat.id, msg.message_id);
p = muten.indexOf(msg.reply_to_message.from.first_name);
muted.splice(p, 1);
muten.splice(p, 1);
bot.sendMessage(msg.chat.id,'<a href="tg://user?id='+msg.reply_to_message.from.id+'">'+msg.reply_to_message.from.first_name+'</a> –∏–∑–±–∞–≤–ª–µ–Ω(–∞) –æ—Ç –º—É—Ç–∞',{parse_mode:"HTML"})
}
})

bot.onText(/^\/unall/, (msg) => {
if (admin.includes(msg.from.id)) {
bot.deleteMessage(msg.chat.id, msg.message_id);
muten.length = 0;
muted.length = 0;
bot.sendMessage(msg.chat.id,'–í—Å–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–∏ –∑–∞–∫–æ–Ω–∞ –ø–æ–ª—É—á–∏–ª–∏ –∞–º–Ω–∏—Å—Ç–∏—é –∏ –∏–∑–±–∞–≤–∏–ª–∏—Å—å –æ—Ç –º—É—Ç–∞');
}
})

bot.onText(/^\/help/, (msg) => {
if (admin.includes(msg.from.id)) {
bot.sendMessage(msg.chat.id,'–ö–æ–º–∞–Ω–¥—ã:\n\n<code>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</code> - –ø–æ—Å–ª–µ —á–µ–≥–æ –±–æ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥–µ—Ç –ø–∏—Å–∞—Ç—å —Ç—É–¥–∞, –∫–¥–µ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞  –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑\n\n<code>–ò–≥—Ä–∞—Ç—å</code> - –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n\n<code>–°—Ç–∞—Ä—Ç</code> - –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–≥—Ä—É\n\n<code>–ö—Ç–æ –≤ –∏–≥—Ä–µ</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∏—Ö id\n\n<code>–í–æ–ø—Ä–æ—Å 1</code> - –≤—ã–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫–∏, 1Ô∏è‚É£2Ô∏è‚É£3Ô∏è‚É£4Ô∏è‚É£\n\n<code>–ö—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–ª</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–ª\n\n<code>–ß—Ç–æ –≤—ã–±—Ä–∞–ª–∏</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏\n\n<code>/kick</code> - –∫–∏–∫–∞–µ—Ç –∏–≥—Ä–æ–∫–∞\n\n<code>/add</code> - –¥–æ–±–∞–≤–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã\n\n<code>–®–∞–Ω—Å—ã</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —à–∞–Ω—Å—ã –∏–≥—Ä–æ–∫–æ–≤\n\n<code>–®–∞–Ω—Å +</code> –∏–ª–∏ <code>—à–∞–Ω—Å -</code> - –ø—Ä–∏–≤–∞–±–∞–≤–ª—è–µ—Ç, –ª–∏–±–æ —É–±–∞–≤–ª—è–µ—Ç —à–∞–Ω—Å –∏–≥—Ä–æ–∫–∞, –Ω–∞ —á—å—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —ç—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ\n\n<code>/give</code> - –¥–∞—ë—Ç —à–∞–Ω—Å –∏–≥—Ä–æ–∫—É –ø–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç\n\n<code>–û—Ç–º–µ–Ω–∏—Ç—å</code> - –æ—Ç–º–µ–Ω—è–µ—Ç –∏–≥—Ä—É\n\n<code>/mute</code> - –¥–∞—ë—Ç –º—É—Ç –∏–≥—Ä–æ–∫—É\n\n<code>/mt</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π\n\n<code>/unm</code> - –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –æ—Ç –º—É—Ç–∞ –∏–≥—Ä–æ–∫–∞\n\n<code>/unall</code> - –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –≤—Å–µ—Ö –æ—Ç –º—É—Ç–∞', {parse_mode: "HTML"})
} else {
bot.sendMessage(msg.chat.id,'–ö–æ–º–∞–Ω–¥—ã:\n\n<code>–ö–æ–Ω—Ñ–µ—Ç—ã</code> - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∫–æ–Ω—Ñ–µ—Ç üç¨\n\n–î–ª—è —Ç–µ–±—è —É –º–µ–Ω—è –Ω–µ—Ç –¥–æ–ø. –∫–æ–º–∞–Ω–¥, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–ø—Ä–æ—Å–∏—Ç—å –∏—Ö —á–µ—Ä–µ–∑ /link')
}
})

bot.onText(/^\/link/i, (msg) => {
bot.sendMessage(msg.chat.id, '<a href="tg://user?id='+admin[0]+'">osculum</a> - —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–æ—Ç–∞\n\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –µ–º—É –∏ —É–≤–∏–¥–µ—Ç—å, –∫–∞–∫ –¥–µ–π—Å—Ç–≤—É–µ—Ç –±–æ—Ç',{parse_mode:"HTML"})
})

bot.onText(/^—à–∞–Ω—Å (.+)/i, (msg, match) => {
if (admin.includes(msg.from.id)) {
p = match[1];
f = ' ';
i = gamer.indexOf(msg.reply_to_message.from.first_name);
if (p === '-') {
f+='—É–º–µ–Ω—å—à–µ–Ω ';
cg[i]--;
} else if (p === '+') {
f+='—É–≤–µ–ª–∏—á–µ–Ω ';
cg[i]++;
}
bot.sendMessage(chatt,'–®–∞–Ω—Å –∏–≥—Ä–æ–∫–∞ '+gamer[i]+f+' –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É');
i = -1;
}
})

bot.onText(/^—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å/i, (msg) => {
if (admin.includes(msg.from.id)) {
chatt = msg.chat.id;
bot.deleteMessage(chatt, msg.message_id);
bot.sendMessage(chatt,'–ß–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω'); 
}
})

bot.onText(/^–æ—Ç–º–µ–Ω–∏—Ç—å/i, (msg) => {
if (admin.includes(msg.from.id)) {
bot.deleteMessage(msg.chat.id, msg.message_id);
bot.deleteMessage(chatt, del);
bot.sendMessage(chatt,'–ò–≥—Ä–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ ü•¥'); 
offirs = 0;
gamer.length = 0;
user.length = 0;
summ.length = 0;
chose.length = 0;
gamersb = 0;
}
})

bot.onText(/^–∏–≥—Ä–∞—Ç—å/i, (msg) => {
if (admin.includes(msg.from.id)) {
for (i=0; i < 40; i++) {
number[i] = i + 1;
}
del = msg.message_id;
del++;
bot.deleteMessage(msg.chat.id, msg.message_id);
if (offirs === 0) {
bot.sendMessage(chatt,'–°—Ç–∞—Ä—Ç–æ–≤–∞–ª –Ω–∞–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –∏–≥—Ä—ã ¬´–ö—Ç–æ —Ö–æ—á–µ—Ç —Å—Ç–∞—Ç—å –∫–≤–∏–Ω—Ç–∏–ª–ª–∏–æ–Ω–µ—Ä–æ–º¬ª', inline1); 
offirs = 1;
} else {
bot.sendMessage(msg.chat.id,'–ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞—Ç–∞. –û–∂–∏–¥–∞–π—Ç–µ...');
} 
}
})


bot.on('message',  (msg) => {
if (muted.includes(msg.from.id)) {
bot.deleteMessage(msg.chat.id, msg.message_id);
}
})

bot.on('callback_query', function (msg) {

if (msg.data === 'togame') {
if (gamer.includes(msg.from.first_name)) {
bot.answerCallbackQuery(msg.id,'–í—ã —É–∂–µ –≤ –∏–≥—Ä–µ', true)
} else {
gamer[gamersb] =  msg.from.first_name;
user[gamersb] = msg.from.id;
cg[gamersb] = 2;
gamersb++;
bot.answerCallbackQuery(msg.id,'–í—ã –≤–æ—à–ª–∏ –≤ –∏–≥—Ä—É', true);
} 
}

if (msg.data === 'nogame') {
if (user.includes(msg.from.id)) {
p = gamer.indexOf(msg.from.first_name);
gamer.splice(p, 1);
user.splice(p, 1);
cg.splice(p, 1);
p = -1;
gamersb--;
bot.answerCallbackQuery(msg.id,'–í—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã',true);
} else {  
bot.answerCallbackQuery(msg.id,'–í—ã –∏—Ç–∞–∫ –Ω–µ –≤ –∏–≥—Ä–µ üò≥',true)
}
  p = -1;
} 

if (msg.data === 'members'){
bot.answerCallbackQuery(msg.id,gamersb+' —É—á–∞—Å—Ç–Ω–∏–∫(–∞/–æ–≤)',true)
}


if (msg.data === 'whois') {
f = ' ';
for (i = 0; i < gamer.length; i++) {
f += '‚ùó' + gamer[i];
}
bot.answerCallbackQuery(msg.id, f, true);
}

if (msg.data === 'AA') {
if (user.includes(msg.from.id)) {
p = gamer.indexOf(msg.from.first_name);
if (chose[p] === 0) {
bot.answerCallbackQuery(msg.id,'–í—ã –≤—ã–±—Ä–∞–ª–∏ 1‚É£ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', true);
  chose[p] = 1;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ ('+chose[p]+')', true);
}
  p = -1;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã –Ω–µ –≤ –∏–≥—Ä–µ', false);
}
}

if (msg.data === 'BB') {
if (user.includes(msg.from.id)) {
p = gamer.indexOf(msg.from.first_name);
if (chose[p] === 0) {
bot.answerCallbackQuery(msg.id,'–í—ã –≤—ã–±—Ä–∞–ª–∏ 2‚É£ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', true);
  chose[p] = 2;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ ('+chose[p]+')', true);
}
p = -1;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã –Ω–µ –≤ –∏–≥—Ä–µ', false);
}
}

if (msg.data === 'CC') {
if (user.includes(msg.from.id)) {
p = gamer.indexOf(msg.from.first_name);
if (chose[p] === 0) {
bot.answerCallbackQuery(msg.id,'–í—ã –≤—ã–±—Ä–∞–ª–∏ 3‚É£ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', true);
  chose[p] = 3;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ ('+chose[p]+')', true);
}
  p = -1;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã –Ω–µ –≤ –∏–≥—Ä–µ', false);
}
}

if (msg.data === 'DD') {
if (user.includes(msg.from.id)) {
p = gamer.indexOf(msg.from.first_name);
if (chose[p] === 0) {
bot.answerCallbackQuery(msg.id,'–í—ã –≤—ã–±—Ä–∞–ª–∏ 4‚É£ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞', true);
  chose[p] = 4;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ ('+chose[p]+')', true);
}
p = -1;
} else {
bot.answerCallbackQuery(msg.id,'–í—ã –Ω–µ –≤ –∏–≥—Ä–µ', false);
}
}

if (msg.data === 'whonot') {
f = ' ';
for (i = 0; i < user.length; i++) {
if (chose[i] === 0) {
f += ' ‚ñ´Ô∏è' + gamer[i];
}
}
bot.answerCallbackQuery(msg.id, f, true);
}

})

bot.onText(/^—Å—Ç–∞—Ä—Ç/i, (msg) => {
if (admin.includes(msg.from.id)) {
if (offirs === 1) {
offirs = 2;
bot.deleteMessage(chatt, del);
del = msg.message_id;
del++;
bot.deleteMessage(chatt, msg.message_id);
bot.sendMessage(chatt,'–ò–≥—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª–∞, –æ–∂–∏–¥–∞–π—Ç–µ –≤–µ–¥—É—â–µ–≥–æ');
}
}
})

bot.onText(/^–≤–æ–ø—Ä–æ—Å (.+)/i, (msg, match) => {
if (admin.includes(msg.from.id)) {
bot.deleteMessage(chatt, del)
del = msg.message_id
del++;
n = match[1];
n--;
  for (i = 0; i < user.length; i++) {
    chose[i] = 0;
    } 
bot.sendMessage(chatt, answ[n], {reply_to_message_id: msg.message_id ,
  reply_markup:{
    inline_keyboard: [
      [{text: a[n] , callback_data:'AA'}, {text: b[n], callback_data:'BB'}],
      [{text: c[n], callback_data:'CC'}, {text: d[n], callback_data:'DD'}]
    ]
  }
})
}
})

bot.onText(/^\/give/, (msg) => {
if (admin.includes(msg.from.id)) {
p = gamer.indexOf(msg.reply_to_message.from.first_name);
bot.deleteMessage(chatt, msg.message_id)
bot.sendMessage(chatt,'–í—ã–±–æ—Ä '+gamer[p]+' —Å–±—Ä–æ—à–µ–Ω');
chose[p] = 0;
p = -1;
}
})



bot.onText(/^\/add/i, (msg) => {
if(admin.includes(msg.from.id)) {
gamer[gamersb] =  msg.reply_to_message.from.first_name;
user[gamersb] = msg.reply_to_message.from.id;
cg[gamersb] = 2;
chose[gamersb] = 0;
gamersb++;
bot.sendMessage(chatt,'–ò–≥—Ä–æ–∫ <a href="tg://user?id='+msg.reply_to_message.from.id+'">'+msg.reply_to_message.from.first_name+'</a> –¥–æ–±–∞–≤–ª–µ–Ω(–∞) –≤ –∏–≥—Ä—É',{parse_mode:"HTML"});
}
})



bot.onText(/^\/kick/, (msg, match) => {
if (admin.includes(msg.from.id)) {
p = gamer.indexOf(msg.reply_to_message.from.first_name);
bot.deleteMessage(chatt, msg.message_id)
bot.sendMessage(chatt, '<a href="tg://user?id='+user[p]+'">'+gamer[p]+'</a> –≤—ã–±—ã–ª(–∞) –∏–∑ –∏–≥—Ä—ã',{parse_mode:"HTML"})
gamer.splice(p, 1);
user.splice(p, 1);
chose.splice(p, 1);
number.splice(p, 1);
cg.splice(p, 1);
p = -1;
gamersb--;
}
})

bot.onText(/^–∫—Ç–æ –≤ –∏–≥—Ä–µ/i, (msg) => {
  if (admin.includes(msg.from.id)) {
    bot.deleteMessage(chatt, msg.message_id)
    f = '–í –∏–≥—Ä–µ:\n';
    for (i = 0; i < user.length; i++) {
    f +=  number[i]+'. ' +gamer[i]+'\n';
    }
    bot.sendMessage(chatt, f)
  }
})

bot.onText(/^—á—Ç–æ –≤—ã–±—Ä–∞–ª–∏/i, (msg) => {
  if (admin.includes(msg.from.id)) {
    bot.deleteMessage(chatt, msg.message_id)
    f = '–í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã:\n';
    for (i = 0; i < user.length; i++) {
      f += number[i] + '. ' + gamer[i] + ' - ' + chose[i] +'\n'
    }
    bot.sendMessage(chatt, f)
  }
})

bot.onText(/^—à–∞–Ω—Å—ã/i, (msg) => {
  if (admin.includes(msg.from.id)) {
    bot.deleteMessage(chatt, msg.message_id);
    f = '–®–∞–Ω—Å—ã:\n';
    for (i = 0; i < user.length; i++) {
      f += number[i] + '. ' + gamer[i] + ' - ';
      if (cg[i] === 3) {
f += '3Ô∏è‚É£\n';
} else if (cg[i] === 2) {
f += '2Ô∏è‚É£\n';
} else if (cg[i] === 1) {
f += '1Ô∏è‚É£\n';
} else {
f += '0Ô∏è‚É£\n';
}
}
bot.sendMessage(chatt, f)
}
})

bot.onText(/^–∫—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–ª/i, (msg) => {
  if (admin.includes(msg.from.id)) {
    bot.deleteMessage(chatt, msg.message_id)
    f = '–ù–µ –≤—ã–±—Ä–∞–ª–∏:\n';
    for (i = 0; i < user.length; i++) {
      if (chose[i] === 0) {
      f += number[i] + '. ' + gamer[i] + '\n';
      }
    }
    bot.sendMessage(chatt, f)
  }
})


